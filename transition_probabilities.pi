main =>
	println("How many example files do you have?"),
	Num_examples = read_int(stdin),
	Writer = open("transition_probabilities.data", write),
	print(Writer, Num_examples),
	print(Writer, " "),
	print(Writer, 27 * 27), 	% the number of inputs to the NN
	print(Writer, " "),
	print(Writer, 2),		% the number of outputs from the NN
	println(Writer, " "),
	foreach(I in 1..Num_examples)
		println("Enter name of input file:"),
		Filename = read_line(stdin),
		println("Which author? (ch/me)"),
		Author = read_line(stdin),
		Matrix = new_array(27, 27),
		generate_probabilities(Filename, Matrix),
		foreach(Row in 1..27, Column in 1..27)
			print(Writer, Matrix[Row, Column]),
			print(Writer, " ")
		end,
		println(Writer, " "),
		if Author == "ch" then println(Writer, "1 0") 
		elseif Author == "me" then println(Writer, "0 1")  
		else println("Error") end,
		println(Writer, " ")
	end,
	close(Writer).



generate_probabilities(Filename, Matrix) =>
	Reader = open(Filename, read),
	foreach(I in 1..27, J in 1..27) 
		Matrix[I, J] = 0 
	end, 
	Prev_char = ' ',  
	Char = read_char(Reader),
	while(Char != end_of_file)
		if ord(Char) >= ord('a') && ord(Char) <= ord('z') && ord(Prev_char) >= ord('a') && ord(Prev_char) <= ord('z') then
			Matrix[ord(Prev_char) - ord('a') + 1, ord(Char)- ord('a') + 1] := Matrix[ord(Prev_char) - ord('a') + 1, ord(Char) - ord('a') + 1] + 1
		elseif ord(Char) >= ord('a') && ord(Char) <= ord('z') && Prev_char == ' ' then
			Matrix[27, ord(Char) - ord('a') + 1] := Matrix[27, ord(Char) - ord('a') + 1] + 1
		elseif Char == ' ' && ord(Prev_char) >= ord('a') && ord(Prev_char) <= ord('z') then
			Matrix[ord(Prev_char) - ord('a') + 1, 27] := Matrix[ord(Prev_char) - ord('a') + 1, 27] + 1
		elseif Char == ' ' && Prev_char == ' ' then
			Matrix[27, 27] := Matrix[27, 27] + 1
		else 
			println("Error: It seems that the file hasn't been preprocessed")
		end,
		Prev_char := Char,
		Char := read_char(Reader)
	end,
	foreach(Row in 1..27)
		Total = 0,
		foreach(Column in 1..27)
			Total := Total + Matrix[Row, Column]
		end,
		foreach(Column in 1..27)
			if Total != 0 then
				Matrix[Row, Column] := Matrix[Row, Column] / Total
			end
		end
	end,
	close(Reader).
	




